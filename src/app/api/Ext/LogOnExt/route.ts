import { NextRequest, NextResponse } from "next/server";

export async function POST(req: NextRequest) {
  const targetUrl = "https://testlkamur.dvec.ru/Ext/LogOnExt";

  try {
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    console.log("üîπ –í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å:", req.method, req.url);

    const requestBody = await req.text();
    console.log("üì© –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:", requestBody);

    const headers: HeadersInit = {
      "Content-Type": "application/json",
    };

    const authHeader = req.headers.get("authorization");
    if (authHeader) {
      headers["Authorization"] = authHeader;
      console.log("üîë –ó–∞–≥–æ–ª–æ–≤–æ–∫ Authorization –Ω–∞–π–¥–µ–Ω");
    }

    console.log("üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞:", targetUrl);

    const response = await fetch(targetUrl, {
      method: "POST",
      headers,
      body: requestBody,
    });

    console.log("üîπ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status, response.statusText);

    const data = await response.json();
    console.log("üì© –î–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", JSON.stringify(data, null, 2));

    return NextResponse.json(data, { status: response.status });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:", error);
    return NextResponse.json(
      { error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API" },
      { status: 500 }
    );
  }
}
